package com.ge.pmms.controller;

import java.util.List;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ge.pmms.dto.DropDownEntry;
import com.ge.pmms.dto.FacilitiesDisposalBean;
import com.ge.pmms.dto.Response;
import com.ge.pmms.dto.WorkOrderMainBean;
import com.ge.pmms.entity.EquipmentInfo;
import com.ge.pmms.entity.FaultReport;
import com.ge.pmms.entity.WorkOrderMaintainance;
import com.ge.pmms.service.FacilityMgmtService;

@Controller
@CrossOrigin
public class FacilityMgmtController {
	
	@Autowired
	private FacilityMgmtService facilityMgmtService;
	
	
	
	
	@RequestMapping(value = "/getFacilityDet", method = RequestMethod.GET)
    @ResponseBody
	public List<EquipmentInfo> getFacilityDet(@RequestParam String equipType){
		
		return facilityMgmtService.getFacilityDet(equipType);
	}
	
	
	@RequestMapping(value = "/getFacilityDetails", method = RequestMethod.GET)
    @ResponseBody
	public List<EquipmentInfo> getFacilityDtls(){
		
		return facilityMgmtService.getFacilityDtls();
	}
	
	
	
	@RequestMapping(value = "/removeFacilityDetails", method = RequestMethod.POST)
	@ResponseBody
	public Response removeFacility(@RequestBody String deleteEquipmentId) {
		 if( deleteEquipmentId==null ||  deleteEquipmentId.equalsIgnoreCase(""))
				return Response.successResponse();
		  
			JSONObject jsonData = new JSONObject(deleteEquipmentId);

			String deleteId=(String)jsonData.get("deleteEquipmentId");
			//Integer id=Integer.parseInt(deleteId);
			String response="";
			
			if(null !=  deleteEquipmentId)
				response = facilityMgmtService.deleteEquipmentInfo(deleteId);
			if(response.equalsIgnoreCase("SUCCESS"))
				return Response.successResponse(response);
			else
			return Response.errorResponse("Fail");
	}
	
	@RequestMapping(value = "/getFacilityCategories", method = RequestMethod.GET)
    @ResponseBody
    public List<DropDownEntry> getFacilityCategories(@RequestParam String Type) {
           return facilityMgmtService.getFacilityCategories(Type);
    }
	
	@RequestMapping(value = "/saveFacilityInformation", method = RequestMethod.POST)
	@ResponseBody
	public Response addFacilityInf(@RequestBody EquipmentInfo equipmentInfo) {
	
		facilityMgmtService.addFacilityInf(equipmentInfo);
		
		return Response.successResponse();
	}
	
@RequestMapping(value = "/getfacilityNames")
	@ResponseBody

	List<DropDownEntry> getEquipNames(@RequestParam String equipType) {
		System.out.println("1");
		List<DropDownEntry> ls = facilityMgmtService.getfacilityNames(equipType);
		System.out.println("end");
		return ls;
	}
	
	@RequestMapping(value = "/getDeptNames")
	@ResponseBody
	List<DropDownEntry> getDeptNames(@RequestParam(required = false) String Type) {
		List<DropDownEntry> ls = facilityMgmtService.getDeptNames(Type);
		return ls;
	}


}
	


